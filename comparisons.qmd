---
title: "comparisions"
format: html
editor: visual
---

## Quarto

## [Access the slides, code, and other materials at the course website](https://datavizm20.classes.andrewheiss.com/content/08-content/)

## [Download the data and see the polished code](https://datavizm20.classes.andrewheiss.com/example/08-example/)

## [Youtube Video playlist](https://www.youtube.com/watch?v=iJOPwPYxZZE&list=PLS6tnpTr39sGAoxtYY1GgHm2ZRQmWeTiP&index=2)

## [data.worldbank.org](https://data.worldbank.org/)

```{r}
#| label: loading packages
#| warning: false
#| message: false

library(tidyverse)  # For ggplot, dplyr, and friends
library(WDI)        # For getting data from the World Bank
library(geofacet)   # For map-shaped facets
library(scales)     # For helpful scale functions like dollar()
library(ggrepel)    # For non-overlapping labels
```

## 

```{r}
#| label: get-data-n-save-it-on-the-system
#| eval: false
#| tidy: styler

indicators <- c("SP.DYN.LE00.IN",  # Life expectancy
                "EG.ELC.ACCS.ZS",  # Access to electricity
                "EN.ATM.CO2E.PC",  # CO2 emissions
                "NY.GDP.PCAP.KD")  # GDP per capita
wdi_raw <- WDI( country = 'all', indicator = indicators, extra = TRUE, start = 1995, end = 2015)
wdi_raw |> head()

write_csv(wdi_raw, 'data/wdi_raw.csv')
```

```{r}
#| label: load-data-for-real-but-dont-show
#| include: false


wdi_raw <- read_csv('data/wdi_raw.csv')
```

```{r}
wdi_clean <- wdi_raw |> 
  filter(region != 'Aggregates') |> 
select(iso2c, country, year, 
         life_expectancy = SP.DYN.LE00.IN, 
         access_to_electricity = EG.ELC.ACCS.ZS, 
         co2_emissions = EN.ATM.CO2E.PC, 
         gdp_per_cap = NY.GDP.PCAP.KD, 
         region, income)
```

## Small multiples

```{r}
wdi_clean |> count(country)
```

```{r}
wdi_smaller <- wdi_clean |> 
  filter(country %in% c('Argentina', 'Bolivia', 'Brazil', 'Chile', 'Canada', 'United States', 'India'))

wdi_smaller |> 
  ggplot(aes(x = year, y = life_expectancy)) + 
  geom_line(size = 1) + 
  facet_wrap(vars(country), scales = 'free_y') + 
  theme_void()
```

```{r}

#| label: middle-east-north-africa-life-expectancy
#| 
wdi_mena <- wdi_clean |> 
  filter(region == "Middle East & North Africa")

wdi_mena |> 
  ggplot(aes(x = year, y = life_expectancy)) + 
  geom_line(size = 1) + 
  facet_wrap(vars(country), scales = 'free_y', nrow = 3) + 
  theme_void()
```

```{r}
#| label: geo-faceted-map
life_expectancy_eu <-
  wdi_clean %>%    filter(region == "Europe & Central Asia") 
ggplot(life_expectancy_eu, aes(x = year, y = life_expectancy)) +   geom_line(size = 1) +   facet_geo(vars(country), grid = "eu_grid1", scales = "free_y") +   labs(
    x = NULL,
    y = NULL,
    title = "Life expectancy from 1995–2015",
    caption = "Source: The World Bank (SP.DYN.LE00.IN)"
  ) +   theme_minimal() +   theme(
    strip.text = element_text(face = "bold"),
    plot.title = element_text(face = "bold"),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )
```

## Sparklines

```{r}
#| label: india-co2-sparkline
#| 
india_co2 <- wdi_clean |> 
  filter(country == 'India')

india_plot <- india_co2 |> 
  ggplot(aes(x = year, y = co2_emissions)) + 
  geom_line() + 
  theme_void()

ggsave('output/india_co2.png', india_plot,  width = 1, height = 0.15, units = 'in')
```

## Slopegraph

```{r}
gdp_south_asia <- wdi_clean |> 
  filter(region == "South Asia") |> 
  filter(year %in% c(1995, 2015)) |> 
  filter(country != 'Afghanistan') |> 
  mutate(year = factor(year)) |> 
  mutate(nice_label_left = if_else(year == 1995, 
           paste0(country, ': ', dollar(round(gdp_per_cap,0))), NA)) |> 
mutate(nice_label_right = if_else(year == 2015, 
         dollar(round(gdp_per_cap)), NA))

gdp_south_asia |> 
  ggplot(aes(x = year, y = gdp_per_cap, color= country, group = country)) + 
  geom_point () + 
  geom_line(size = 2) + 
  geom_text_repel(aes(label = nice_label_left), nudge_x = -1, direction = 'y') + 
  geom_text_repel(aes(label = nice_label_right), nudge_x = 1, direction = 'y') + 
  theme_void() + 
  theme(legend.position = 'none')
  
```

## **Bump charts**

```{r}
sa_co2 <- wdi_clean %>% 
  filter(region == "South Asia") %>% 
  filter(year >= 2004, year < 2015) %>% 
  group_by(year) %>% 
  mutate(rank = rank(co2_emissions))
```

We then plot this with points and lines, reversing the y-axis so 1 is at the top:

```{r}
ggplot(sa_co2, aes(x = year, y = rank, color = country)) +
  geom_line() +
  geom_point() +
  scale_y_reverse(breaks = 1:8)
```

Afghanistan and Nepal switched around for the number 1 spot, while India dropped from 4 to 6, switching places with Pakistan.

As with the slopegraph, there are 8 different colors in the legend and it\'s hard to line them all up with the different lines, so we can plot the text directly instead. We\'ll use `geom_text()` again. We don\'t need to repel anything, since the text should fit in each row just fine. We need to change the `data` argument in `geom_text()` though and filter the data to only include one year, otherwise we\'ll get labels on every point, which is excessive. We can also adjust the theme and colors to make it cleaner.

```{r}
ggplot(sa_co2, aes(x = year, y = rank, color = country)) +
  geom_line(size = 2) +
  geom_point(size = 4) +
  geom_text(data = filter(sa_co2, year == 2004),
            aes(label = iso2c, x = 2003.25),
            fontface = "bold") +
  geom_text(data = filter(sa_co2, year == 2014),
            aes(label = iso2c, x = 2014.75),
            fontface = "bold") +
  guides(color = FALSE) +
  scale_y_reverse(breaks = 1:8) +
  scale_x_continuous(breaks = 2004:2014) +
  scale_color_viridis_d(option = "magma", begin = 0.2, end = 0.9) +
  labs(x = NULL, y = "Rank") +
  theme_minimal() +
  theme(panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank(),
        panel.grid.minor.x = element_blank())
```

If you want to be *super* fancy, you can use flags instead of country codes, but that\'s a little more complicated (you need to install the [**ggflags** package](https://github.com/rensa/ggflags). [See here for an example](https://dominikkoch.github.io/Bump-Chart/).
